trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Azure DevOps K8s Terraform!
  displayName: 'Run a one-line script'

- task: DownloadSecureFile@1
  name: publickey
  inputs:
    secureFile: 'azure_rsa_3.pub'

- task: TerraformCLI@2
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/MASTER/terraform-azure-devops/terraform/configuration/iaac/azure/kubernetes'
    backendType: 'azurerm'
    backendServiceArm: 'azure-resource-manager-service-connection'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'backend-tf-rg'
    backendAzureRmResourceGroupLocation: 'westeurope'
    backendAzureRmStorageAccountName: 'storageaccountlana2'
    backendAzureRmContainerName: 'storageaccountcontainerlana2'
    backendAzureRmKey: 'k8s-dev.tfstate'
    commandOptions: '-reconfigure'

- task: TerraformCLI@2
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/MASTER/terraform-azure-devops/terraform/configuration/iaac/azure/kubernetes'
    environmentServiceName: 'azure-resource-manager-service-connection'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      pip install kubernetes

- task: Ansible@0
  inputs:
    ansibleInterface: 'agentMachine'
    playbookPathOnAgentMachine: '$(System.DefaultWorkingDirectory)/MASTER/terraform-azure-devops/ansible/playbooks/01-playbook.yml'
    inventoriesAgentMachine: 'file'
    inventoryFileOnAgentMachine: '$(System.DefaultWorkingDirectory)/MASTER/terraform-azure-devops/ansible/ansible_hosts'
